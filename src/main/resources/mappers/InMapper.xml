<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.no1.wms.in.InMapper">
	<resultMap id="inResultMap" type="InDto">
		<id column="id" 					property="id" />
		<result column="group_number" 		property="group_number" />
		<result column="product_id" 		property="product_id" />
		<result column="in_date" 			property="in_date" />
		<result column="quantity" 			property="quantity" />
		<result column="warehouse_id" 		property="warehouse_id" />
		<result column="manager_id" 		property="manager_id" />
		<result column="note" 				property="note" />
		<result column="activation" 		property="activation" />
		<result column="latest_price" property="latest_price" />
		<!-- join -->
		<association property="planInDto" 		javaType="PlanInDto">
			<id column="groupNumber" 			property="groupNumber" />
			<id column="productId" 				property="productId" />
			<result column="view_group_number" 		property="viewGroupNumber" />
		</association>
		<association property="productDto" 		javaType="ProductDto">
			<id column="id" 					property="id" />
			<result column="product_name" 		property="name" />
		</association>
		<association property="warehouseDto" 		javaType="WarehouseDto">
			<id column="id" 					property="id" />
			<result column="warehouse_name" 		property="name" />
		</association>
		<association property="accountDto" 		javaType="AccountDto">
			<id column="id" 					property="id" />
			<result column="account_name" 		property="name" />
		</association>
	
	</resultMap>
	
	
	<!-- insert -->
		<insert id="createProcess" parameterType="InDto">
			INSERT INTO product_in (id, product_id, in_date, quantity, warehouse_id, manager_id, note, activation) 
			VALUES (UUID(), #{product_id}, #{in_date}, #{quantity}, #{warehouse_id}, #{manager_id}, #{note}, 1)
		</insert>
		
		<insert id="createStockProcess" parameterType="InDto">
	        INSERT INTO stock (id, warehouse_id, product_id, quantity, activation)
	        VALUES (UUID(), #{warehouse_id}, #{product_id}, #{quantity}, 1)
	    </insert>
		
		
	<!-- update -->
		<update id="updateById" parameterType="InDto">
			UPDATE product_in 
			SET product_id = #{product_id}, in_date = #{in_date},quantity = #{quantity}, 
			warehouse_id = #{warehouse_id}, manager_id = #{manager_id}, note = #{note}
			WHERE id = #{id}
		</update>
		
		<update id="deactivateById" parameterType="String">
			UPDATE product_in
			SET activation = 0
			WHERE id = #{id}
		</update>
		
		<update id="updateStockProcessForUpdate" parameterType="InDto">
	        UPDATE stock
	        SET quantity = #{quantity}
	        WHERE warehouse_id = #{warehouse_id} AND product_id = #{product_id} and activation = 1
    	</update>
		
		<update id="updateStockProcess" parameterType="InDto">
	        UPDATE stock
	        SET quantity = quantity + #{quantity}
	        WHERE warehouse_id = #{warehouse_id} AND product_id = #{product_id} and activation = 1
	    </update>
		
		<update id="updateWarehouseQuantity" parameterType="Map">
			update warehouse set current_capacity = #{updateValue} where id = #{warehouseId} and activation = 1
		</update>
		
	<!-- delete -->
	<!-- select -->
	<select id="count" parameterType="map" resultType="int">
	    SELECT COUNT(*)
	
	    FROM 
		product_in as proin 
		left join plan_In as planin on proin.group_number = planin.group_number and proin.product_id = planin.product_id
		left join product as pro on proin.product_id = pro.id
		left join warehouse as w on proin.warehouse_id = w.id
		left join account as a on proin.manager_id = a.id
	    <where>
	        <choose>
	            <when test="searchn == 0">
	            	proin.activation = 1 and proin.product_id IN (SELECT id FROM product WHERE name LIKE CONCAT('%',#{search},'%'))
	            </when>
	            <when test="searchn == 1">
	                proin.activation = 1 AND proin.in_date LIKE CONCAT('%',#{search},'%')
	            </when>
	            <when test="searchn == 2">
	                proin.activation = 1 AND proin.manager_id IN (SELECT id FROM account WHERE name LIKE CONCAT('%',#{search},'%'))
	            </when>
	            <when test="searchn == 3">
	                proin.activation = 1 AND proin.group_number LIKE CONCAT('%',#{search},'%')
	            </when>
	        </choose>
	    </where>
	</select>

	<select id="
" parameterType="map" resultMap="inResultMap">
	    SELECT 
	        proin.id, proin.group_number, proin.product_id, proin.in_date, proin.quantity, proin.warehouse_id, proin.manager_id, proin.note, proin.activation,
	        planin.view_group_number,
	        pro.name as product_name, 
	        w.name as warehouse_name,
	        a.name as account_name,
	        (SELECT price FROM prices WHERE product_id = proin.product_id and activation = 1 ORDER BY registration_date DESC LIMIT 1) as latest_price
	    FROM 
	        product_in as proin 
	        LEFT JOIN plan_In as planin on proin.group_number = planin.group_number and proin.product_id = planin.product_id
	        LEFT JOIN product as pro on proin.product_id = pro.id
	        LEFT JOIN warehouse as w on proin.warehouse_id = w.id
	        LEFT JOIN account as a on proin.manager_id = a.id
	    <where>
	        <choose>
	            <when test="searchn == 0">
	                proin.activation = 1 and proin.product_id IN (SELECT id FROM product WHERE name LIKE CONCAT('%',#{search},'%'))
	            </when>
	            <when test="searchn == 1">
	                proin.activation = 1 AND proin.in_date LIKE CONCAT('%',#{search},'%')
	            </when>
	            <when test="searchn == 2">
	                proin.activation = 1 AND proin.manager_id IN (SELECT id FROM account WHERE name LIKE CONCAT('%',#{search},'%'))
	            </when>
	            <when test="searchn == 3">
	                proin.activation = 1 AND proin.group_number LIKE CONCAT('%',#{search},'%')
	            </when>
	        </choose>
	    </where>
	    	ORDER BY proin.in_date desc LIMIT #{start} , #{perPage}
	</select>

	<select id="inListMain" parameterType="map" resultMap="inResultMap">
		SELECT
			proin.id, proin.group_number, proin.product_id, proin.in_date, proin.quantity, proin.warehouse_id, proin.manager_id, proin.note, proin.activation,
			planin.view_group_number,
			pro.name as product_name,
			w.name as warehouse_name,
			a.name as account_name,
			(SELECT price FROM prices WHERE product_id = proin.product_id ORDER BY registration_date DESC LIMIT 1) as latest_price
		FROM
			product_in as proin
				LEFT JOIN plan_In as planin on proin.group_number = planin.group_number and proin.product_id = planin.product_id
				LEFT JOIN product as pro on proin.product_id = pro.id
				LEFT JOIN warehouse as w on proin.warehouse_id = w.id
				LEFT JOIN account as a on proin.manager_id = a.id
		WHERE proin.in_date LIKE CONCAT(#{today},'%') and proin.activation = 1
		ORDER BY proin.in_date desc LIMIT 5
	</select>
	
	
	<select id="selectById" parameterType="String" resultMap="inResultMap">
		SELECT 
	        proin.id, proin.group_number, proin.product_id, proin.in_date, proin.quantity, proin.warehouse_id, proin.manager_id, proin.note, proin.activation,
	        planin.view_group_number,
	        pro.name as product_name, 
	        w.name as warehouse_name,
	        a.name as account_name,
	        (SELECT price FROM prices WHERE product_id = proin.product_id ORDER BY registration_date DESC LIMIT 1) as latest_price
	    FROM 
	        product_in as proin 
	        LEFT JOIN plan_In as planin on proin.group_number = planin.group_number and proin.product_id = planin.product_id
	        LEFT JOIN product as pro on proin.product_id = pro.id
	        LEFT JOIN warehouse as w on proin.warehouse_id = w.id
	        LEFT JOIN account as a on proin.manager_id = a.id
		WHERE proin.id = #{id}
	
	</select>
	
	
	
	<select id="checkIfExistsStock" resultType="int" parameterType="InDto">
        SELECT COUNT(*) FROM stock
        WHERE warehouse_id = #{warehouse_id} AND product_id = #{product_id} and activation = 1
    </select>
	
	
	
	
	
	<select id="currntStockQuantity" parameterType="InDto" resultType="int">
		SELECT quantity 
		FROM stock 
		WHERE warehouse_id = #{warehouse_id} AND product_id = #{product_id} and activation = 1
	</select>

	<select id="currntInQuantity" parameterType="InDto" resultType="int">
		SELECT quantity 
		FROM product_in 
		WHERE id = #{id} and activation = 1
	</select>
	
	<select id="selectWarehouseQuantity" parameterType="String" resultType="String">
		select sum(quantity) from stock where warehouse_id = #{warehouseId} and activation = 1
	</select>
	
	
	
	
	
	
	
</mapper>